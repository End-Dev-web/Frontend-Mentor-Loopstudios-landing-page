@use "sass:math";
@use "../abstracts/" as *;
@use "../utilities/container" as *;

$grid-columns: 12;

.row {
  display: flex;
  // flex-flow: row wrap;
}

.grid {
  display: grid;
}

.flex-direction {
  flex-direction: column;
  @include mq(md) {
    flex-direction: row;
  }
}

@for $i from 1 through $grid-columns {
  .col-#{$i}-xs {
    box-sizing: border-box;
    flex-grow: 0;
    width: math.div($i * 100%, $grid-columns);
  }
}

@include mq(sm) {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include mq(md) {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include mq(lg) {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include mq(xl) {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include mq(xxl) {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xxl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
